name: "CI/CD Pipeline"

on:
  push:
    paths-ignore:
      - ".gitignore"
      - "README.md"
  pull_request:
    paths-ignore:
      - ".gitignore"
      - "README.md"

jobs:
  build-test:
    name: "Build test image"
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Extract name and version from Makefile
        run: |
          echo "PROJECT_NAME=$(grep -oP '^PROJECT_NAME := \K.*' Makefile)" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(grep -oP '^PROJECT_VERSION := \K.*' Makefile)" >> $GITHUB_ENV
      - name: Build and push test
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.PROJECT_VERSION }}-test,${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:test

  build-prod:
    name: "Build production image"
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Extract name and version from Makefile
        run: |
          echo "PROJECT_NAME=$(grep -oP '^PROJECT_NAME := \K.*' Makefile)" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$(grep -oP '^PROJECT_VERSION := \K.*' Makefile)" >> $GITHUB_ENV
      - name: Build and push production
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          no-cache: true
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.PROJECT_VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest
  
